upstream rails_app {
  server kid_stag_app:3000;
}
server {
  # define your domain
  server_name bikids.edu.vn www.bikids.edu.vn;
  # define the public application root
  root   $RAILS_ROOT/public;
  index  index.html;
  # define where Nginx should write its logs
  access_log $RAILS_ROOT/log/nginx.access.log;
  error_log $RAILS_ROOT/log/nginx.error.log;

  #listen 443 ssl; # managed by Certbot

  # RSA certificate
  #ssl_certificate /etc/letsencrypt/live/bikids.edu.vn/fullchain.pem; # managed by Certbot
  #ssl_certificate_key /etc/letsencrypt/live/bikids.edu.vn/privkey.pem; # managed by Certbot

  #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

  # Redirect non-https traffic to https
  #if ($scheme != "https") {
  # return 301 https://$host$request_uri;
  #} # managed by Certbot

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }
  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
    try_files $uri @rails;
    access_log off;
    gzip_static on;
    # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;

    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # send non-static file requests to the app server
  location /shop {
    try_files $uri @rails;
  }
  location / {
    root /usr/src/fe-landingpage;
    index index.html;
  }
  location @rails {
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    #proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://rails_app;
  }
}
